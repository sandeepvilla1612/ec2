name: Launch EC2 and Create IAM User "vunathi"

on:
  workflow_dispatch:

jobs:
  create-iam-user:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Launch EC2 Instance
      id: launch
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ${{ secrets.AMI_ID }} \
          --count 1 \
          --instance-type ${{ secrets.EC2_INSTANCE_TYPE || 't2.micro' }} \
          --key-name ${{ secrets.EC2_KEY_NAME }} \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHubEC2}]' \
          --query 'Instances[0].InstanceId' --output text)

        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

        echo "Waiting for EC2 instance to be in running state..."
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID

        PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID \
          --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)

        echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Save SSH Key
      run: |
        echo "${{ secrets.EC2_KEY_PAIR_PEM }}" | base64 -d > ec2-key.pem
        chmod 400 ec2-key.pem

    - name: Create IAM User 'vunathi' from EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ env.EC2_PUBLIC_IP }} << 'EOF'
          echo "Installing AWS CLI..."
          sudo yum install -y awscli

          IAM_USER="vunathi"
          echo "Creating IAM user: \$IAM_USER"
          aws iam create-user --user-name \$IAM_USER

          echo "Attaching AdministratorAccess policy"
          aws iam attach-user-policy \
            --user-name \$IAM_USER \
            --policy-arn arn:aws:iam::aws:policy/AdministratorAccess

          echo "Creating access key for IAM user"
          aws iam create-access-key --user-name \$IAM_USER
        EOF

    - name: Terminate EC2 Instance (Cleanup)
      run: |
        aws ec2 terminate-instances --instance-ids ${{ env.INSTANCE_ID }}
        echo "Waiting for EC2 to terminate..."
        aws ec2 wait instance-terminated --instance-ids ${{ env.INSTANCE_ID }}
