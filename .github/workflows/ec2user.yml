name: Launch EC2 Instance and Create IAM User

on:
  workflow_dispatch:  # Trigger manually

jobs:
  launch-and-create:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Launch EC2 Instance
      run: |
        echo "Launching EC2 instance..."

        # Launch EC2 instance (Amazon Linux 2 in us-east-1)
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0f918f7e67a3323f0 \
          --instance-type t2.micro \
          --key-name my-keypair-mumbai \
          --security-groups default \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=krishna}]' \
          --query 'Instances[0].InstanceId' \
          --output text)

        echo "EC2 Instance Launched with ID: $INSTANCE_ID"

        # Wait until the instance is running
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        echo "Instance is running"

        # Get the public IP of the instance
        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)

        echo "Instance Public IP: $PUBLIC_IP"

        # Export to environment variables for later use
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Create IAM User (vunathi)
      run: |
        echo "Creating IAM user 'vunathi'..."

        # Create the user (ignore error if already exists)
        aws iam create-user --user-name vunathi || echo "User 'vunathi' may already exist"

        # Attach a managed policy (EC2 full access)
        aws iam attach-user-policy \
          --user-name vunathi \
          --policy-arn arn:aws:iam::aws:policy/AmazonEC2FullAccess

        # Create access keys (handle carefully)
        aws iam create-access-key --user-name vunathi > vunathi_keys.json

        echo "IAM user 'vunathi' created successfully and keys stored in vunathi_keys.json"
